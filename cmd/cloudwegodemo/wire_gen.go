// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"cloudwegodemo/cmd/cloudwegodemo/internal/biz"
	"cloudwegodemo/cmd/cloudwegodemo/internal/config"
	"cloudwegodemo/cmd/cloudwegodemo/internal/repo"
	"cloudwegodemo/cmd/cloudwegodemo/internal/server"
	"cloudwegodemo/pkg/configor"
	"cloudwegodemo/pkg/database/mysql"
	"cloudwegodemo/pkg/database/redis"
)

// Injectors from wire.go:

// wireApp init application.
func wireApp(option *configor.Option) (*APP, func(), error) {
	configorConfigor, err := config.NewGlobalConfigor(option)
	if err != nil {
		return nil, nil, err
	}
	getOptionFn := config.GetMySQLOptionFn()
	mySQL, err := mysql.NewMySQLPool(configorConfigor, getOptionFn)
	if err != nil {
		return nil, nil, err
	}
	redisGetOptionFn := config.GetRedisOptionFn()
	redisRedis, err := redis.NewRedisPool(configorConfigor, redisGetOptionFn)
	if err != nil {
		return nil, nil, err
	}
	repoSet, err := repo.NewRepoSet(mySQL, redisRedis)
	if err != nil {
		return nil, nil, err
	}
	bizSet, err := biz.NewBizSet()
	if err != nil {
		return nil, nil, err
	}
	getHTTPServerOption := config.GetHTTPServerOptionFn()
	hertz, err := server.NewHTTPServer(getHTTPServerOption)
	if err != nil {
		return nil, nil, err
	}
	app, cleanup, err := newApp(configorConfigor, repoSet, bizSet, hertz)
	if err != nil {
		return nil, nil, err
	}
	return app, func() {
		cleanup()
	}, nil
}
